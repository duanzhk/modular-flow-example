{"version":3,"sources":["file:///Users/dzk/Documents/git-projects/example-mflow/node_modules/dzkcc-mflow/dist/utils/ObjectUtil.js"],"names":["ObjectUtil","isObject","value","Object","prototype","toString","call","isObjectLiteral","getPrototypeOf","isArray","target","deepCopy","result","Date","setTime","getTime","Array","i","length","key","hasOwnProperty","console","warn","copy","JSON","parse","stringify"],"mappings":";;;MACMA,U;;;;AADN;4BACMA,U,GAAN,MAAMA,UAAN,CAAiB;AACb;AACJ;AACA;AACA;AACmB,eAARC,QAAQ,CAACC,KAAD,EAAQ;AACnB,iBAAOC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,KAA/B,MAA0C,iBAAjD;AACH;;AACqB,eAAfK,eAAe,CAACL,KAAD,EAAQ;AAC1B,iBAAOA,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,QAAnC,IAA+CC,MAAM,CAACK,cAAP,CAAsBN,KAAtB,MAAiCC,MAAM,CAACC,SAA9F;AACH;AACD;AACJ;AACA;AACA;;;AACkB,eAAPK,OAAO,CAACC,MAAD,EAAS;AACnB,iBAAOP,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BI,MAA/B,MAA2C,gBAAlD;AACH;AACD;AACJ;AACA;AACA;;;AACmB,eAARC,QAAQ,CAACD,MAAD,EAAS;AACpB,cAAIA,MAAM,IAAI,IAAV,IAAkB,OAAOA,MAAP,KAAkB,QAAxC,EAAkD;AAC9C,mBAAOA,MAAP;AACH;;AACD,cAAIE,MAAM,GAAG,IAAb;;AACA,cAAIF,MAAM,YAAYG,IAAtB,EAA4B;AACxBD,YAAAA,MAAM,GAAG,IAAIC,IAAJ,EAAT;AACAD,YAAAA,MAAM,CAACE,OAAP,CAAeJ,MAAM,CAACK,OAAP,EAAf;AACA,mBAAOH,MAAP;AACH;;AACD,cAAIF,MAAM,YAAYM,KAAtB,EAA6B;AACzBJ,YAAAA,MAAM,GAAG,EAAT;;AACA,iBAAK,IAAIK,CAAC,GAAG,CAAR,EAAWC,MAAM,GAAGR,MAAM,CAACQ,MAAhC,EAAwCD,CAAC,GAAGC,MAA5C,EAAoDD,CAAC,EAArD,EAAyD;AACrDL,cAAAA,MAAM,CAACK,CAAD,CAAN,GAAY,KAAKN,QAAL,CAAcD,MAAM,CAACO,CAAD,CAApB,CAAZ;AACH;;AACD,mBAAOL,MAAP;AACH;;AACD,cAAIF,MAAM,YAAYP,MAAtB,EAA8B;AAC1BS,YAAAA,MAAM,GAAG,EAAT;;AACA,iBAAK,IAAMO,GAAX,IAAkBT,MAAlB,EAA0B;AACtB,kBAAIA,MAAM,CAACU,cAAP,CAAsBD,GAAtB,CAAJ,EAAgC;AAC5BP,gBAAAA,MAAM,CAACO,GAAD,CAAN,GAAc,KAAKR,QAAL,CAAcD,MAAM,CAACS,GAAD,CAApB,CAAd;AACH;AACJ;;AACD,mBAAOP,MAAP;AACH;;AACDS,UAAAA,OAAO,CAACC,IAAR,gDAAuBV,MAAvB;AACH;AACD;AACJ;AACA;AACA;;;AACe,eAAJW,IAAI,CAACb,MAAD,EAAS;AAChB,iBAAOc,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAehB,MAAf,CAAX,CAAP;AACH;;AAxDY,O","sourcesContent":["/** 对象工具 */\r\nclass ObjectUtil {\r\n    /**\r\n     * 判断指定的值是否为对象\r\n     * @param value 值\r\n     */\r\n    static isObject(value) {\r\n        return Object.prototype.toString.call(value) === '[object Object]';\r\n    }\r\n    static isObjectLiteral(value) {\r\n        return value !== null && typeof value === 'object' && Object.getPrototypeOf(value) === Object.prototype;\r\n    }\r\n    /**\r\n     * 是否是数组\r\n     * @param target\r\n     */\r\n    static isArray(target) {\r\n        return Object.prototype.toString.call(target) === \"[object Array]\";\r\n    }\r\n    /**\r\n     * 深拷贝\r\n     * @param target 目标\r\n     */\r\n    static deepCopy(target) {\r\n        if (target == null || typeof target !== 'object') {\r\n            return target;\r\n        }\r\n        let result = null;\r\n        if (target instanceof Date) {\r\n            result = new Date();\r\n            result.setTime(target.getTime());\r\n            return result;\r\n        }\r\n        if (target instanceof Array) {\r\n            result = [];\r\n            for (let i = 0, length = target.length; i < length; i++) {\r\n                result[i] = this.deepCopy(target[i]);\r\n            }\r\n            return result;\r\n        }\r\n        if (target instanceof Object) {\r\n            result = {};\r\n            for (const key in target) {\r\n                if (target.hasOwnProperty(key)) {\r\n                    result[key] = this.deepCopy(target[key]);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        console.warn(`不支持的类型：${result}`);\r\n    }\r\n    /**\r\n     * 拷贝对象\r\n     * @param target 目标\r\n     */\r\n    static copy(target) {\r\n        return JSON.parse(JSON.stringify(target));\r\n    }\r\n}\n\nexport { ObjectUtil };\n"]}